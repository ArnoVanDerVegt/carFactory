; Wheel, copyright (c) 2020 - present by {yourName}
; Distributed under an {yourLicense}
#project "Factory form"

#include "lib/device.whl"
#include "lib/light.whl"
#include "lib/motor.whl"
#include "lib/poweredUp.whl"
#include "lib/sensor.whl"
#include "lib/standard.whl"

#include "lib/components/component.whl"
#include "lib/components/form.whl"
#include "lib/components/tabs.whl"
#include "lib/components/selectButton.whl"
#include "lib/components/button.whl"
#include "lib/components/label.whl"
#include "lib/components/title.whl"
#include "lib/components/image.whl"

#include "form/formTabControl.whl"

#include "devices.whl"
#include "factory.whl"
#include "lib/components/interval.whl"

#rangecheck "off"
#heap       40900

#define FACTORY_FORM_LABEL_MOTOR_1   0x4925780C
#define FACTORY_FORM_LABEL_MOTOR_2   0xE8065F64
#define FACTORY_FORM_LABEL_MOTOR_3   0x0728854D
#define FACTORY_FORM_INTERVAL1       0xF4BC22B5
#define FACTORY_FORM_BUTTON_DOWN         0x8A1F6E75
#define FACTORY_FORM_BUTTON_LEFT         0xE026EE80
#define FACTORY_FORM_BUTTON_MOTOR_A1     0xF609DD46
#define FACTORY_FORM_BUTTON_MOTOR_A2     0xCEDD8E66
#define FACTORY_FORM_BUTTON_MOTOR_B1     0xBE951D0C
#define FACTORY_FORM_BUTTON_MOTOR_B2     0x37ECD490
#define FACTORY_FORM_BUTTON_MOTOR_C1     0xCBF97685
#define FACTORY_FORM_BUTTON_MOTOR_C2     0xEAB1FA2D
#define FACTORY_FORM_BUTTON_MOTOR_D1     0x43C6EA33
#define FACTORY_FORM_BUTTON_MOTOR_D2     0xEDF83F7F
#define FACTORY_FORM_BUTTON_RESET        0x99C1B371
#define FACTORY_FORM_BUTTON_RIGHT        0x8B1277C2
#define FACTORY_FORM_BUTTON_UP           0x2A3DD20E
#define FACTORY_FORM_IMAGE1              0xCB7FFF70
#define FACTORY_FORM_LABEL_MOTOR1        0x4925780C
#define FACTORY_FORM_LABEL_MOTOR2        0xE8065F64
#define FACTORY_FORM_LABEL_MOTOR3        0x0728854D
#define FACTORY_FORM_LABEL_X             0x090DA5CD
#define FACTORY_FORM_LABEL_Y             0xF7CECDF3
#define FACTORY_FORM_MAIN_TABS           0xC9EA066D
#define FACTORY_FORM_SELECT_ROBOT        0x9A4E0D42
#define FACTORY_FORM_UPDATE_POS_INTERVAL 0xF4BC22B5

#resource "factoryForm.wfrm"

proc onFactoryFormUpdatePosIntervalInterval(number windowHandle)
    number labels[3] = [FACTORY_FORM_LABEL_MOTOR_1, FACTORY_FORM_LABEL_MOTOR_2, FACTORY_FORM_LABEL_MOTOR_3]
    number i
    with activeRobot.robotConfig
        for i = 0 to 2
            with motors[i]
                components.label.setValueNumber(mainWindow, labels[i], motorLayerRead(layer, port))
            end
        end
    end
end

; @proc                   Show the form.
; @ret                    The handle to the form.
proc showFactoryFormForm()
    mainWindow = components.form.show("factoryForm.wfrm")
end

proc setFormDisabled(number disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_A1,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_A2,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_B1,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_B2,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_C1,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_C2,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_D1,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_MOTOR_D2,   disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_RESET,      disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_LEFT,       disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_RIGHT,      disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_UP,         disabled)
    components.button.setDisabled(mainWindow, FACTORY_FORM_BUTTON_DOWN,       disabled)

    components.selectButton.setDisabled(mainWindow, FACTORY_FORM_SELECT_ROBOT, disabled)
end

proc updateCommand()
    select command
        case CMD_REV:
            activeRobot.rev(motorIndex)        
        case CMD_FWD:
            activeRobot.fwd(motorIndex)                
        case CMD_STOP:
            activeRobot.stop(motorIndex)                
        case CMD_RESET:
            setFormDisabled(TRUE)
            activeRobot.reset()                
    end
    command = CMD_NONE
    setFormDisabled(FALSE)
end

proc main()
    initDevices()
    initRobots()
    initFactory()

    showFactoryFormForm()

    repeat
        updateFactory() 
        if command != CMD_NONE
            updateCommand()
        end
    end
end
